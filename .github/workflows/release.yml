name: Release

on:
  push:
    branches: [ release/* ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      image_name: ${{ github.repository }}
      github_owner: ${{ github.repository_owner }}
      github_repo: ${{ github.repository }}
      github_user: ${{ github.actor }}
    steps:
      - name: Get release version
        id: version_step
        run: |
          NEW_VERSION=`echo "${{ github.ref_name }}" | sed -e 's/release\///g'` 
          echo "::set-output name=version::$NEW_VERSION"

      - name: Install cargo-edit
        run: |
          cargo install cargo-edit

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set crate version
        env:
          version: ${{ steps.version_step.outputs.version }}
        run: |
          cargo set-version "$version"

      - name: Build
        run: |
          cargo build --release --verbose

      - name: Build image
        env:
          version: ${{ steps.version_step.outputs.version }}
        run: |
          echo "Building Image [ghcr.io/$github_owner/$image_name:$version]"
          DOCKER_BUILDKIT=1 docker build . \
            --file Dockerfile \
            --tag "ghcr.io/$github_owner/$image_name:$version" \
            --label "org.opencontainers.image.source=https://github.com/$github_repo"

      - name: Get image details
        env:
          version: ${{ steps.version_step.outputs.version }}
        run: |
          docker image inspect "ghcr.io/$github_owner/$image_name:$version"

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.version_step.outputs.version }}
          tag: "release-${{ steps.version_step.outputs.version }}"
          artifacts: "target/release/home-dns-refresh"
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBody: true

      - name: Publish crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: |
          cargo publish --verbose

      - name: Publish image
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.version_step.outputs.version }}
        run: |
          echo "Pushing Image [ghcr.io/$github_owner/$image_name:$version]"
          echo -n "$github_token" | docker login ghcr.io -u "$github_user" --password-stdin
          docker push "ghcr.io/$github_owner/$image_name:$version"
